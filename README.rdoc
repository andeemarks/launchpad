= launchpad

{<img src="https://travis-ci.org/andeemarks/launchpad.png?branch=master" alt="Build Status" />}[https://travis-ci.org/andeemarks/launchpad]

This gem provides a Ruby interface to access the {Novation Launchpad MK2}[https://global.novationmusic.com/launch/launchpad#] programmatically.

This gem started life as a clone of {Thomas Jachman's gem}[https://github.com/thomasjachmann/launchpad] and was updated to handle the MK2 version of the Launchpad.

== More Info

* Novation's Launchpad MK2 MIDI programmer's reference {here}[https://global.novationmusic.com/sites/default/files/novation/downloads/10529/launchpad-mk2-programmers-reference-guide_0.pdf]

== Requirements

* Roger B. Dannenberg's {portmidi library}[http://sourceforge.net/projects/portmedia/]
* Jan Krutisch's {portmidi gem}[http://github.com/halfbyte/portmidi]

== Compatibility

The gem is known to be compatible with the following ruby versions:

* MRI 2.3.1

== Installation

The gem is hosted on RubyGems[https://rubygems.org/], so in order to use it, you're gonna gem install it:

  gem install launchpad


== Usage

There are two main entry points:

* require 'launchpad/device', providing Launchpad::Device, which handles all the basic input/output stuff
* require 'launchpad/interaction' or just 'launchpad', additionally providing Launchpad::Interaction, which lets you respond to actions (button presses/releases)

This is a simple example (only requiring the device for output) that resets the launchpad and then lights the grid button at position 4/4 (from bottom left of 0/0).

  require 'launchpad/device'
  
  device = Launchpad::Device.new
  sleep 1
  device.reset_all
  sleep 1
  device.change :grid, :x => 4, :y => 4, :color => 72

This is an interaction example lighting all grid buttons in red when pressed and keeping them lit.

  require 'launchpad'
  
  interaction = Launchpad::Interaction.new
  interaction.response_to(:grid, :down) do |interaction, action|
    interaction.device.change(:grid, action.merge(:color => 72))
  end
  interaction.response_to(:mixer, :down) do |interaction, action|
    interaction.stop
  end
  
  interaction.start


For more details, see the examples. examples/color_picker.rb is the most complex example with interaction.

== Copyright

Copyright (c) 2016 Andy Marks. See LICENSE for details.
